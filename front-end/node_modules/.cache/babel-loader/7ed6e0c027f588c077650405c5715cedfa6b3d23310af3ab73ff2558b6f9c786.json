{"ast":null,"code":"var _jsxFileName = \"/Users/maxencebadinleger/Documents/GitHub/Portfolio/front-end/src/components/AnimatedButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedButton = ({\n  text,\n  isImageHovered\n}) => {\n  _s();\n  const [originalText, setOriginalText] = useState(text);\n  const [buttonText, setButtonText] = useState(originalText);\n  const animationDuration = 1000;\n  const intervalRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const getRandomLetter = useCallback(() => {\n    return originalText.charAt(Math.floor(Math.random() * originalText.length));\n  }, [originalText]);\n  const scrambleText = useCallback(() => {\n    let scrambledText = \"\";\n    for (let i = 0; i < originalText.length; i++) {\n      if (Math.random() < 0.5) {\n        scrambledText += originalText[i];\n      } else {\n        scrambledText += getRandomLetter();\n      }\n    }\n    return scrambledText;\n  }, [getRandomLetter, originalText]);\n  const myTimer = useCallback(() => {\n    const elapsedTime = Date.now() - startTimeRef.current;\n    if (elapsedTime >= animationDuration) {\n      clearInterval(intervalRef.current);\n      setButtonText(originalText);\n    } else {\n      setButtonText(scrambleText(originalText));\n    }\n  }, [originalText, scrambleText]);\n  const handleMouseEnter = useCallback(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    startTimeRef.current = Date.now();\n    intervalRef.current = setInterval(myTimer, 100);\n  }, [myTimer]);\n  const handleMouseLeave = useCallback(() => {\n    clearInterval(intervalRef.current);\n    setButtonText(originalText);\n  }, [originalText]);\n  useEffect(() => {\n    setOriginalText(text);\n    setButtonText(text);\n  }, [text]);\n  useEffect(() => {\n    if (isImageHovered) {\n      handleMouseEnter();\n    } else {\n      handleMouseLeave();\n    }\n  }, [isImageHovered, handleMouseEnter, handleMouseLeave]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn\",\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    children: buttonText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedButton, \"Nx484OUlLG1oC4V/xqlxMDnBaV8=\");\n_c = AnimatedButton;\nexport default AnimatedButton;\nvar _c;\n$RefreshReg$(_c, \"AnimatedButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","AnimatedButton","text","isImageHovered","_s","originalText","setOriginalText","buttonText","setButtonText","animationDuration","intervalRef","startTimeRef","getRandomLetter","charAt","Math","floor","random","length","scrambleText","scrambledText","i","myTimer","elapsedTime","Date","now","current","clearInterval","handleMouseEnter","setInterval","handleMouseLeave","className","onMouseEnter","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maxencebadinleger/Documents/GitHub/Portfolio/front-end/src/components/AnimatedButton.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\n\nconst AnimatedButton = ({ text, isImageHovered }) => {\n  const [originalText, setOriginalText] = useState(text);\n  const [buttonText, setButtonText] = useState(originalText);\n  const animationDuration = 1000;\n  const intervalRef = useRef(null);\n  const startTimeRef = useRef(null);\n\n  const getRandomLetter = useCallback(() => {\n    return originalText.charAt(Math.floor(Math.random() * originalText.length));\n  }, [originalText]);\n\n  const scrambleText = useCallback(() => {\n    let scrambledText = \"\";\n    for (let i = 0; i < originalText.length; i++) {\n      if (Math.random() < 0.5) {\n        scrambledText += originalText[i];\n      } else {\n        scrambledText += getRandomLetter();\n      }\n    }\n    return scrambledText;\n  }, [getRandomLetter, originalText]);\n\n  const myTimer = useCallback(() => {\n    const elapsedTime = Date.now() - startTimeRef.current;\n    if (elapsedTime >= animationDuration) {\n      clearInterval(intervalRef.current);\n\n      setButtonText(originalText);\n    } else {\n      setButtonText(scrambleText(originalText));\n    }\n  }, [originalText, scrambleText]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n\n    startTimeRef.current = Date.now();\n    intervalRef.current = setInterval(myTimer, 100);\n  }, [myTimer]);\n\n  const handleMouseLeave = useCallback(() => {\n    clearInterval(intervalRef.current);\n\n    setButtonText(originalText);\n  }, [originalText]);\n\n  useEffect(() => {\n    setOriginalText(text);\n    setButtonText(text);\n  }, [text]);\n\n  useEffect(() => {\n    if (isImageHovered) {\n      handleMouseEnter();\n    } else {\n      handleMouseLeave();\n    }\n  }, [isImageHovered, handleMouseEnter, handleMouseLeave]);\n\n  return (\n    <div\n      className=\"btn\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {buttonText}\n    </div>\n  );\n};\n\nexport default AnimatedButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}