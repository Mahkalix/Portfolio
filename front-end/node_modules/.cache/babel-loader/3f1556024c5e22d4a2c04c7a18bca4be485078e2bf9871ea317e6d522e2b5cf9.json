{"ast":null,"code":"var _jsxFileName = \"/Users/maxencebadinleger/Documents/GitHub/Portfolio/front-end/src/pages/Admin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  useEffect(() => {\n    // Fetch projects from the server\n    fetch(\"/api/projects\").then(response => response.json()).then(data => setProjects(data));\n  }, []);\n  const handleEdit = project => {\n    setSelectedProject(project);\n  };\n  const handleSave = () => {\n    // Save the updated project to the server\n    fetch(`/api/projects/${selectedProject.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(selectedProject)\n    }).then(() => {\n      setSelectedProject(null);\n      // Refresh the projects list\n      fetch(\"/api/projects\").then(response => response.json()).then(data => setProjects(data));\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelectedProject({\n      ...selectedProject,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin - Manage Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-list\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(project),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), selectedProject && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: selectedProject.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: selectedProject.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"HYp3BKs9VpRLZxBGL+Kp5Gm1U0o=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Admin","_s","projects","setProjects","selectedProject","setSelectedProject","fetch","then","response","json","data","handleEdit","project","handleSave","id","method","headers","body","JSON","stringify","handleChange","e","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","onClick","type","onChange","description","_c","$RefreshReg$"],"sources":["/Users/maxencebadinleger/Documents/GitHub/Portfolio/front-end/src/pages/Admin.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Admin = () => {\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n\n  useEffect(() => {\n    // Fetch projects from the server\n    fetch(\"/api/projects\")\n      .then((response) => response.json())\n      .then((data) => setProjects(data));\n  }, []);\n\n  const handleEdit = (project) => {\n    setSelectedProject(project);\n  };\n\n  const handleSave = () => {\n    // Save the updated project to the server\n    fetch(`/api/projects/${selectedProject.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(selectedProject),\n    }).then(() => {\n      setSelectedProject(null);\n      // Refresh the projects list\n      fetch(\"/api/projects\")\n        .then((response) => response.json())\n        .then((data) => setProjects(data));\n    });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setSelectedProject({ ...selectedProject, [name]: value });\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <h2>Admin - Manage Projects</h2>\n      <div className=\"projects-list\">\n        {projects.map((project) => (\n          <div key={project.id} className=\"project-item\">\n            <h3>{project.title}</h3>\n            <button onClick={() => handleEdit(project)}>Edit</button>\n          </div>\n        ))}\n      </div>\n      {selectedProject && (\n        <div className=\"edit-form\">\n          <h3>Edit Project</h3>\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={selectedProject.title}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            Description:\n            <textarea\n              name=\"description\"\n              value={selectedProject.description}\n              onChange={handleChange}\n            />\n          </label>\n          <button onClick={handleSave}>Save</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Admin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}