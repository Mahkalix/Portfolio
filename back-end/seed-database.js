const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcrypt');

const prisma = new PrismaClient({
  log: ['query', 'info', 'warn', 'error'],
});

async function seedDatabase() {
  try {
    console.log('üå± D√©but du seeding de la base de donn√©es...');
    console.log('üîó Test de connexion √† la base de donn√©es...');
    
    // Test de connexion
    await prisma.$connect();
    console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie !');

    // V√©rifier les tables existantes
    const adminCount = await prisma.admin.count();
    const projectCount = await prisma.project.count();
    console.log(`üìä √âtat actuel : ${adminCount} admin(s), ${projectCount} projet(s)`);

    // 1. Cr√©er l'admin depuis le backup Supabase
    const existingAdmin = await prisma.admin.findUnique({
      where: { username: 'admin' }
    });

    if (!existingAdmin) {
      const newAdmin = await prisma.admin.create({
        data: {
          username: 'admin',
          password: '$2b$10$Ku9FedTif0YwIVlBt5Y0I.zGHdWfgJynfTdj2.pkT2r19dXnm1biG', // Password depuis le backup
          createdAt: new Date('2025-02-19T09:25:57.593Z')
        }
      });
      console.log('‚úÖ Admin cr√©√© avec succ√®s, ID:', newAdmin.id);
    } else {
      console.log('‚ö†Ô∏è  Admin existe d√©j√†, ID:', existingAdmin.id);
    }

    // 2. Cr√©er des projets d'exemple (adapt√©s √† votre portfolio)
    const projects = [
      {
        id: 'ckrandom1portfolio',
        title: 'Portfolio Personnel',
        description: 'Un portfolio moderne et responsive d√©velopp√© avec React.js, Node.js et PostgreSQL. Int√®gre une interface d\'administration pour la gestion dynamique des projets, un syst√®me d\'authentification s√©curis√© et une API RESTful. Design responsive avec animations CSS et support multi-th√®mes.',
        year: 2025,
        use: 'D√©veloppement web full-stack avec React et Node.js',
        visit: 'https://mahkalix-portfolio.netlify.app',
        view: 'https://github.com/Mahkalix/Portfolio',
        cover: '/images/portfolio-cover.jpg',
        tools: JSON.stringify(['React.js', 'Node.js', 'PostgreSQL', 'Prisma', 'SCSS', 'Express']),
        category: 'Web Development'
      },
      {
        id: 'ckrandom2ecommerce',
        title: 'Plateforme E-commerce',
        description: 'Application e-commerce compl√®te avec gestion des produits, panier d\'achat, syst√®me de paiement Stripe, gestion des utilisateurs et interface d\'administration. Architecture microservices avec API RESTful et base de donn√©es relationnelle.',
        year: 2024,
        use: 'D√©veloppement d\'une solution e-commerce compl√®te',
        visit: 'https://demo-ecommerce-mahkalix.vercel.app',
        view: 'https://github.com/Mahkalix/ecommerce-app',
        cover: '/images/ecommerce-cover.jpg',
        tools: JSON.stringify(['React.js', 'Node.js', 'MongoDB', 'Stripe', 'Express', 'JWT']),
        category: 'E-commerce'
      },
      {
        id: 'ckrandom3taskmanager',
        title: 'Gestionnaire de T√¢ches',
        description: 'Application de gestion de t√¢ches collaborative avec fonctionnalit√©s de drag & drop, notifications en temps r√©el, syst√®me de commentaires, gestion des √©quipes et tableaux de bord analytiques. Interface intuitive inspir√©e de Trello.',
        year: 2024,
        use: 'Application de productivit√© et collaboration d\'√©quipe',
        visit: 'https://taskmanager-demo.netlify.app',
        view: 'https://github.com/Mahkalix/task-manager',
        cover: '/images/taskmanager-cover.jpg',
        tools: JSON.stringify(['React.js', 'Node.js', 'Socket.io', 'PostgreSQL', 'Redux', 'Tailwind CSS']),
        category: 'Productivity'
      },
      {
        id: 'ckrandom4weatherapp',
        title: 'Application M√©t√©o',
        description: 'Application m√©t√©o moderne avec pr√©visions d√©taill√©es, g√©olocalisation, cartes interactives, alertes m√©t√©o et interface responsive. Int√©gration d\'APIs externes pour donn√©es m√©t√©orologiques en temps r√©el.',
        year: 2024,
        use: 'Application web pour consultation m√©t√©orologique',
        visit: 'https://weather-mahkalix.netlify.app',
        view: 'https://github.com/Mahkalix/weather-app',
        cover: '/images/weather-cover.jpg',
        tools: JSON.stringify(['React.js', 'OpenWeather API', 'Leaflet', 'CSS3', 'Geolocation API']),
        category: 'Web App'
      },
      {
        id: 'ckrandom5chatapp',
        title: 'Application de Chat',
        description: 'Application de messagerie instantan√©e avec chat en temps r√©el, salles de discussion, partage de fichiers, √©mojis, statuts en ligne et notifications push. Architecture bas√©e sur WebSockets pour une communication fluide.',
        year: 2023,
        use: 'Communication en temps r√©el et messagerie instantan√©e',
        visit: 'https://chat-realtime-mahkalix.herokuapp.com',
        view: 'https://github.com/Mahkalix/realtime-chat',
        cover: '/images/chat-cover.jpg',
        tools: JSON.stringify(['React.js', 'Socket.io', 'Node.js', 'MongoDB', 'Express', 'WebRTC']),
        category: 'Communication'
      },
      {
        id: 'ckrandom6blog',
        title: 'Blog Personnel',
        description: 'Blog moderne avec syst√®me de CMS, √©diteur de contenu riche, syst√®me de commentaires, cat√©gories, tags, SEO optimis√© et interface d\'administration compl√®te. Support du markdown et optimisation des performances.',
        year: 2023,
        use: 'Plateforme de publication et partage de contenu',
        visit: 'https://blog-mahkalix.vercel.app',
        view: 'https://github.com/Mahkalix/personal-blog',
        cover: '/images/blog-cover.jpg',
        tools: JSON.stringify(['Next.js', 'Markdown', 'Prisma', 'PostgreSQL', 'Tailwind CSS', 'Vercel']),
        category: 'Content Management'
      }
    ];

    // V√©rifier et cr√©er les projets
    for (const project of projects) {
      const existingProject = await prisma.project.findUnique({
        where: { id: project.id }
      });

      if (!existingProject) {
        await prisma.project.create({ data: project });
        console.log(`‚úÖ Projet "${project.title}" cr√©√©`);
      } else {
        console.log(`‚ö†Ô∏è  Projet "${project.title}" existe d√©j√†`);
      }
    }

    console.log('\nüéâ Seeding termin√© avec succ√®s !');
    console.log(`üìä Base de donn√©es peupl√©e avec :`);
    console.log(`   - 1 Admin`);
    console.log(`   - ${projects.length} Projets`);
    console.log('\nüåê Vous pouvez maintenant :');
    console.log('   - Visiter http://localhost:3000 pour voir le portfolio');
    console.log('   - Visiter http://localhost:5555 pour Prisma Studio');
    console.log('   - Vous connecter en admin avec : admin / [votre mot de passe]');

  } catch (error) {
    console.error('‚ùå Erreur lors du seeding :', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter le seeding
seedDatabase();
